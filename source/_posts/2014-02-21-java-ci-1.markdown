---
layout: post
title: "Java CI環境(Jenkins+α)構築のおさらい その1 SVN構築編"
date: 2014-02-21 10:23:41 +0900
comments: true
categories: 
---

今まで自分で構築する機会がなかったので自分の理解を再確認する意味も兼ねて手順を残しておきます。JenkinsでSubversionからMavenプロジェクトをチェックアウトし、タグ付け、Nexusへのデプロイするところまでをゴールとします。

## 環境

* CentOS 6.5 (x86_64)
* Subversion 1.7.4 (+Apache 2.2 WebDAV)
* Nexus OSS 2.7.1-01
* Jenkins 1.551

## SVNのインストール

JenkinsからHTTP経由でリポジトリにアクセスできるようにするため、SVNリポジトリの作成とApacheでWebDAVを構築を行います。なお、SVNの認証方式については、全てのユーザが読み書きできるものとして割愛します。必要なパッケージは次のとおりです。

* httpd: 2.2.15
* mod_dav_svn: 1.7.4
* subversion: 1.7.4

CentOSのレポジトリでは、SVNのバージョンが1.6しか提供されていません。1.7をインストールするには、別途、RPMForgeのリポジトリからRPMを取得します。

/etc/yum.repos.dにRPMForgeのレポジトリ情報を追加します。

    # cd /usr/local/src
    # wget http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.2-2.el6.rf.i686.rpm
    # rpm -ivh rpmforge-release-0.5.2-2.el6.rf.i686.rpm

rpmforge-extraのリポジトリを有効にします。

    # vi /etc/yum.repos.d/rpmforge.repo
        : 
    [rpmforge-extras]
    name = RHEL $releasever - RPMforge.net - extras
    baseurl = http://apt.sw.be/redhat/el6/en/$basearch/extras
    mirrorlist = http://apt.sw.be/redhat/el6/en/mirrors-rpmforge-extras
    #mirrorlist = file:///etc/yum.repos.d/mirrors-rpmforge-extras
    enabled = 1   # <--ここを修正

Yumでこれらのパッケージをインストールします。

    # yum clean all
    # yum install -y subversion httpd mod_dav_svn

## SVNリポジトリの作成とWebDAV対応

インストールが完了したら続いてSVNのリポジトリを作成します。SVNのの設定は、単一のリポジトリを運用するか、または複数運用するかによって設定の内容が変わります。前者は、リポジトリ追加のたびにApacheの再起動が必要になるため、今回は複数のリポジトリを公開する設を行います。

SVNで複数のリポジトリを公開吸う場合、SVNParentPathでレポジトリの親ディレクトリを指定します。具体的なディレクトリ階層は下記のとおりです。

     /var/www          # DocumentRoot
     ├── cgi-bin
     ├── error
     ├── html
     ├── icons
     └── svn           # SVNParentPath
         └── repos     # Repository
svnのルートディレクトリを作成し、その配下にレポジトリを作成します。

     # mkdir /var/www/svn
     # cd /var/www/svn
     # svnadmin create repos
     # chown -R apache. repos

mod_dav_svnの設定内容は次のとおりです。

    # vi /etc/httpd/conf.d/subversion.conf
        : 
    LoadModule dav_svn_module     modules/mod_dav_svn.so
    LoadModule authz_svn_module   modules/mod_authz_svn.so
    LoadModule dontdothat_module  modules/mod_dontdothat.so
        : 
    <Location /svn>
       DAV svn
       SVNParentPath /var/www/svn
       SVNListParentPath on
       SVNAdvertiseV2Protocol off

       # Limit write permission to list of valid users.
       #<LimitExcept GET PROPFIND OPTIONS REPORT>
       #   # Require SSL connection for password protection.
       #   # SSLRequireSSL
    
       #   AuthType Basic
       #   AuthName "Authorization Realm"
       #   AuthUserFile /path/to/passwdfile
       #   Require valid-user
       #</LimitExcept>
    </Location>

設定後、Apacheを再帰動しブラウザで http://localhost/svn/repos にアクセスし下記の画面が見れていればOKです。

![SVN Virtual Host](/images/20140221/svn_repos_capture.png)

## プロジェクトをSVNにインポートする

リポジトリの構築が終わったらテスト用のプロジェクトを作成します。svnコマンドでプロジェクト階層の雛形をインポートします。

     $ cd /tmp
     $ mkdir -p project/{trunk,branches,tags}
     $ tree project
     project/
     ├── branches
     ├── tags
     └── trunk
     $ svn import project http://localhost/svn/repos/project -m "initial commit"
         :
     リビジョン 1 をコミットしました。

trunkをチェックアウトしMavenプロジェクトを作成します。

    $ svn checkout http://localhost/svn/repos/project/trunk
    $ cd trunk/
    $ mvn archetype:generate \
        -DgroupId=name.satoshi.yamamoto \
        -DartifactId=project \
        -DarchetypeArtifactId=maven-archetype-quickstart 

Mavenプロジェクトが作成できたら、pom.xmlにSVNのリポジトリ情報を追加します。

    <scm>
      <connection>scm:svn:http://localhost/svn/repos/project/trunk/project</connection>
    </scm>

targetディレクトリをバージョン管理下から外すため、svn:ignoreプロパティを設定します。その後、プロジェクトをtrunkにコミットします。

    $ svn propset svn:ignore target .
    属性 'svn:ignore' を '.' に設定しました

    $ svn add project
    $ svn commit
        :
    リビジョン 2 をコミットしました。

最後にブラウザから追加したプロジェクトが表示されていれば成功です。次はMavenリポジトリのnexusを構築します。

## 参考

* [Subversionのインストールと設定(Apache編)](http://www.gside.org/Gentoo/subversion/subversion.html)
* [試験管のなかのコード :: Maven2 の release プラグインにチャレンジ](http://www.in-vitro.jp/blog/index.cgi/Maven/20081007_01.htm)
